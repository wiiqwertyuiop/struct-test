// Todo:
//
// - Vecotr
// - Input:
	|0|
//	"Enter data:"
//	"Left child? (y/n):"
//	*Create vector* 1
//	"Right child? (y/n):"
//	*Create vector*	2
//
	|1|
//	"[root data] Left child data:"
//	"Create left child? (y/n):"
//	*Create vector* 3
//	"Create right child? (y/n):"
//	*Create vector* 4

	|2|
//	"[root data] Right child data:"
//	"Create left child? (y/n):"
//	*Create vector* 5
//	"Create right child? (y/n):"
//	*Create vector* 6
//	
//
// No more? Ouput

#include <string>
#include <iostream>

using namespace std;

struct node {
  int parent;
  string data;
  int left;
  int right;
  
};

vector<node> Tree;
  
int main() {

  int i, sub = 0;
  int lastParent = -1;

  char y_n;
  
  Tree.push_back(node());	// Create root node

  ////////////////////////////////
  //
  // Root node

  Tree[i].parent = lastParent;

  cout << "Enter data: ";
  cin >> Tree[i].data;

  cout << "Left child? (y/n): ";
  cin >> y_n;

  if(y_n == 'y') {
	sub++;
	Tree[i].left = sub;
	Tree.push_back(node());	// Create new node
  } else {
	Tree[i].left = 0;
  }

  cout << "Right child? (y/n): ";
  cin >> y_n;

  if(y_n == 'y') {
	sub++;
	Tree[i].right = sub;
	Tree.push_back(node());	// Create new node
  } else {
	Tree[i].right = 0;
  }

  i++;

  ////////////////////////////////
  //
  // Main loop

  while(i < (int)Tree.size()) {	// Loop until the user no longer wants to add nodes

  }

  ////////////////////////////////
  //
  // Output:

  cout << "\n\n---------Output----------\n\n";

  return 0;
}